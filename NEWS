telepathy-logger 0.2.1 (2011-02-23)
===================================

The "We are human!" release

This bug fix release fixes memory corruption in GList manipulation. We
strongly suggest distributions using 0.2.0 version to update to this
version.

Fixes:

* Use g_list_alloc() instead of g_new0() to allocate list (Sjoerd)
* Use _async() TplLogManager methods in unit test (Nicolas)
* Do not ignore system() return value in unit test (Guillaume)


telepathy-logger 0.2.0 (2011-02-23)
===================================

This version is a large API refactoring that enables abstraction of
the logged event type and clarifies the methods. Alongside this large refactoring
some new features like ability to clear logs (see D-Bus API) and read-only
Pidgin log store can be found. While it remains compatible on the storage
side, the API is not.A version of Empathy compatible with this release will be
released shortly; watch the Telepathy mailing list for details.

Enhancement:

* Read-only support for Pidgin log store.
* Ability to clear logs (see D-Bus API).
* Largely reworked API:
  - TplEntry is now TplEvent.
  - Sub-class naming is now more natural (e.g. TplTextEvent instead of
    TplEventText).
  - D-Bus API has been reduced to the minimum required function.
  - chat-id is now commonly called target-id to abstract text chat.
  - TplSearchHit has been cleanup and usage reduced.
  - TplEntityDirection has been remove from TplEntity.
  - TplEntity and TplEvent class was cleaned from useless setters and unused getters.
  - ROOM is now used instead of GROUP to follow Telepathy naming.
  - _get_chats() method is now replaced by _get_entities().
  - Unused method _search_in_identitifer() is removed.
  - TplTextEvent exposes message-type to let client know if it's a /me message.
  - TplLogManager API now takes TplEntity to identify target.
  - TplEventTypeMask can be used to filter event type (for future use).
* A fair amount of test has been added.


telepathy-logger 0.1.7 (2010-11-29)
===================================

This bug fix release fixes a crash and remove a lot of memory leaks. We
strongly suggest to distributions to update to this version.

Fixes:

• Stop using tp_get_bus(). (smcv)
• Loads of memory leaks fixed. (cassidy)
• Don't crash by trying to use the sqlite log store after it has been
  disposed. (cassidy)

telepathy-logger 0.1.6 (2010-10-13)
===================================

The “maths lesson” release.

Fixes:

• Running the test suite no longer accesses your session's GSettings.
  (Danni)
• Out-of-tree builds now work. (Nicolas)
• A CM crashing with open text channels no longer causes conversations
  not to be logged, and to take 25 seconds to be displayed.
  (fd.o#30824, Will)

telepathy-logger 0.1.5 (2010-08-11)
===================================

Dependencies:

* GLib ≥ 2.25.11
* No more dependency on GConf

Enhancements:

* The logger uses GSettings instead of GConf for preferences (fdo #28602). The
  ignore-accounts key has been removed for now as it was unused and broken.

Fix:

* Make sure that TplLogSearchHit always contains the account if
  known (fdo #29058).

telepathy-logger 0.1.4 (2010-07-08)
===================================

Fix:

* Don't crash if the logger is asked to observe the same channel twice. This
  appens with telepathy-idle because of bug fdo #28918.

telepathy-logger 0.1.3 (2010-06-28)
===================================

Dependencies:

* telepathy-glib ≥ 0.11.7

Enhancements:

* Properly support the Debug interface.

* Reuse existing TpAccount objects instead of creating new ones. This reduce
  the D-Bus traffic when logging messages as we don't need to fetch the
  account properties any more (fdo #28682).

* Cache all the participants of the room when logging group text channels
  (fdo #28680).

Fixes:

* Correctly set the 'isuser' flag when logging text channels.

* Correctly set the sender ID when logging group text channels.

* Properly sort dates in the list returned by
  tpl_log_manager_get_filtered_messages_finish.

* Fix a race when logging text messages.

* Correctly set the default value of the ignorelist gconf key.

* Install the logger to $libexec.

* Set the Recover flag in the logger's client file so MissionControl will
  make it observe existing channels when (re)starting.

* Return earlier from ObserveChannels() to avoid blocking channels dispatching
  too long (fdo #28787).


telepathy-logger 0.1.2 (2010-06-18)
===================================

The API of libtelepathy-logger has been cleaned up and now only includes:
- TplEntity (previously TplContact)
- TplEntry (previously TplLogEntry)
- TplEntryText (previously TplLogTextEntry)
- TplLogManager

This API should stay stable in the 0.1.x cycle.

The library has been licensed more permissively and is now available under the
GNU Lesser General Public License, version 2.1 or (at your option) any
later version.

Dependencies:

* telepathy-glib ≥ 0.11.5
* telepathy-mission-control ≥ 5.4.0 is recommended


telepathy-logger 0.1.1 (2010-02-26)
===================================

The ``brick by brick'' release.

This is the second previous release of the telepathy-logger. You should be aware
that this is a piece of software that is still very much in development,
everything is subject to change.

The idea behind tp-logger is that it will become a generic logging daemon usable
anywhere in Telepathy, with any Telepathy client.

Changes in this release:
 - libtelepathy-logger.pc is now just telepathy-logger.pc
 - asynchronous API has _finish() methods.
 - Fix a crasher in handling MUCs
 - Logger now observes channels that are open when it starts
 - API now includes support for storing favourite contacts in a way that can
   be shared between Telepathy clients

telepathy-logger 0.1.0 (2010-02-24)
===================================

The ``Calamity Ensues'' release

This is the first preview release of the telepathy-logger. You should be aware
that this is a piece of software that is still very much in development,
everything is subject to change.

The idea behind tp-logger is that it will become a generic logging daemon usable
anywhere in Telepathy, with any Telepathy client.

Things that mostly work:

 - logging of text channels into an Empathy style log format using a Telepathy
   Observer client
 - Telepathy-style D-Bus API to retrieve logs (will be extended soon with more
   functionality)
 - libtelepathy-logger API to allow clients to access logs en-masse
 - GConf preferences to control what accounts to log

Things that don't work:

 - existing channels won't be logged when the logger starts
 - preference changes aren't noticed asynchronously

Note that tp-logger won't import your existing logs from Empathy, for the time
being, if you're running it, you are going to end up with two sets of logs,
one from Empathy and one from tp-logger.
